
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module TR4_freedom(

	//////////// CLOCK //////////
	input 		          		OSC_50_BANK1,
	input 		          		OSC_50_BANK3,
	input 		          		OSC_50_BANK4,
	input 		          		OSC_50_BANK7,
	input 		          		OSC_50_BANK8,

	//////////// Loop //////////
	input 		          		LOOP_CLKIN0,
	input 		          		LOOP_CLKIN1,
	output		          		LOOP_CLKOUT0,
	output		          		LOOP_CLKOUT1,

	//////////// LED x 4 //////////
	output		     [3:0]		LED,

	//////////// BUTTON x 4 //////////
	input 		     [3:0]		BUTTON,

	//////////// DDR3 SODIMM //////////
	input 		          		mem_EVENT_n,
	output		          		mem_SCL,
	inout 		          		mem_SDA,
	output		    [15:0]		mem_a,
	output		     [2:0]		mem_ba,
	output		          		mem_cas_n,
	output		     [1:0]		mem_ck,
	output		     [1:0]		mem_ck_n,
	output		     [1:0]		mem_cke,
	output		     [1:0]		mem_cs_n,
	output		     [7:0]		mem_dm,
	inout 		    [63:0]		mem_dq,
	inout 		     [7:0]		mem_dqs,
	inout 		     [7:0]		mem_dqs_n,
	output		     [1:0]		mem_odt,
	output		          		mem_ras_n,
	output		          		mem_reset_n,
	output		          		mem_we_n,

	//////////// OCT RUP/RDN for Altera DDR3 UniPHY Controller //////////
	input 		          		mem_oct_rdn,
	input 		          		mem_oct_rup,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	inout 		    [35:0]		GPIO,

	//////////// HSMC-F, HSMC-F connect to HSMC Default //////////
	input 		          		HSM_CLKIN0,
	input 		          		HSM_CLKIN_n1,
	input 		          		HSM_CLKIN_n2,
	input 		          		HSM_CLKIN_p1,
	input 		          		HSM_CLKIN_p2,
	output		          		HSM_CLKOUT_n1,
	output		          		HSM_CLKOUT_n2,
	output		          		HSM_CLKOUT_p1,
	output		          		HSM_CLKOUT_p2,
	inout 		     [3:0]		HSM_D,
	inout 		          		HSM_OUT0,
	inout 		    [16:0]		HSM_RX_n,
	inout 		    [16:0]		HSM_RX_p,
	inout 		    [16:0]		HSM_TX_n,
	inout 		    [16:0]		HSM_TX_p,

	//////////// HSMC D/E/F I2C //////////
	output		          		HSMC_DEF_SCL,
	inout 		          		HSMC_DEF_SDA
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================



endmodule
